// <auto-generated />
using System;
using CSharpIntermediate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharpIntermediate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharpIntermediate.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("id");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int(10)")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8mb4");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int(10)")
                        .HasColumnName("qoh");

                    b.Property<int?>("ReorderTheshold")
                        .HasColumnType("int(10)")
                        .HasColumnName("reorderthreshold");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("saleprice");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID")
                        .HasDatabaseName("FK_Product_ProductCategory");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            Name = "Milk",
                            QuantityOnHand = 10,
                            SalePrice = 2.50m
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            Name = "Cereal",
                            QuantityOnHand = 50,
                            SalePrice = 1.25m
                        });
                });

            modelBuilder.Entity("CSharpIntermediate.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description"), "utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8mb4");

                    b.HasKey("ProductCategoryID");

                    b.ToTable("product_category", (string)null);

                    b.HasData(
                        new
                        {
                            ProductCategoryID = 1,
                            Description = "All of the coolest products.",
                            Name = "Cool Products"
                        });
                });

            modelBuilder.Entity("CSharpIntermediate.Models.Product", b =>
                {
                    b.HasOne("CSharpIntermediate.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductCategory");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("CSharpIntermediate.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
